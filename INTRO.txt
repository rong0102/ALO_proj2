//input:TTTTNNTNTNTNTNTNT
-----------------------------------------
vector<char> outcome(3, 'N');//初始狀態
vector<int>process = {0,0,0,0,0,0,0,0};//0=SN, 1=WN, 2=WT, 3=ST
char predict;//declare prediction
char c;//nput outcome
1. 將老師給的input 放入vector
while (cin>>c ){
		...
	}
2.for迴圈
(1)往前判斷history
or (int i = 3; i < outcome.size(); i++)
	{
		//history determination
		//000,001,010,011,100,101,110,111--> 0 ~ 7
		int history = 0;
		//往前3個的outcome來update history
		if (outcome[i - 1] == 'T') {
			history += 1;
		}
		if (outcome[i - 2] == 'T') {
			history += 2;
		}
		if (outcome[i - 3] == 'T') {
			history += 4;
		}
		
		cout<< bitset<3>(history) << "  ";
		...
	}
3.(2)用history去看process陣列要update的位置
if (process[history] == 0 || process[history] == 1) {//SN & WN
			predict = 'N';
		}
		else {
			predict = 'T';//ST & WT
		}
4.update process(0=SN, 1=WN, 2=WT, 3=ST)
遇到taken++，not taken --
if (outcome[i] == 'T' && process[history] < 3) {//process[history] = 3時 已是ST
	process[history]++;
}
if (outcome[i] == 'N' && process[history] > 0) {//process[history] = 0時 已是SW
	process[history]--;
}